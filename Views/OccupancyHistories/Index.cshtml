@model IEnumerable<EnterpriseManagementApp.Models.OccupancyHistory>

@{
    ViewData["Title"] = "Occupancy History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page Title -->
<h1 class="page-title">Occupancy History</h1>

<!-- Create New Button -->
<div class="button-container">
    <a class="btn btn-create" asp-action="Create">
        <i class="fas fa-plus-circle"></i> Create New
    </a>
</div>

<!-- Occupancy History Table -->
<div class="table-container">
    <table class="occupancy-table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Customer)</th>
                <th>@Html.DisplayNameFor(model => model.Asset)</th>
                <th>@Html.DisplayNameFor(model => model.Start)</th>
                <th>@Html.DisplayNameFor(model => model.End)</th>
                <th>@Html.DisplayNameFor(model => model.Paid)</th>
                <th>@Html.DisplayNameFor(model => model.TotalDue)</th>
                <th><span>Remaining</span><br><span>Balance</span></th> <!-- Column name split here -->
                <th>@Html.DisplayNameFor(model => model.Status)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Customer.FullName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Asset.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Start)</td>
                    <td>@Html.DisplayFor(modelItem => item.End)</td>
                    <td>@Html.DisplayFor(modelItem => item.Paid)</td>
                    <td>@Html.DisplayFor(modelItem => item.TotalDue)</td>
                    <td>@Html.DisplayFor(modelItem => item.RemainingBalance)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>
                        <a class="btn btn-edit" asp-action="Edit" asp-route-customerId="@item.CustomerId" asp-route-assetId="@item.AssetId">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a class="btn btn-details" asp-action="Details" asp-route-id="@item.OccupancyHistoryId">
                            <i class="fas fa-info-circle"></i> Details
                        </a>
                        <a class="btn btn-delete" asp-action="Delete" asp-route-id="@item.OccupancyHistoryId" onclick="return confirm('Are you sure you want to delete this item?');">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Embedded CSS for Styling -->
<!-- Embedded CSS for Styling -->
<style>
    /* General Body Styles */
    body {
        font-family: 'Helvetica Neue', Arial, sans-serif;
        background-color: #f4f4f4;
        color: #333;
        margin: 0;
        padding: 30px;
        box-sizing: border-box;
    }

    /* Page Title */
    .page-title {
        color: #333;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 20px;
        text-transform: uppercase;
        letter-spacing: 1px;
        text-align: left;
    }

    /* Button Container */
    .button-container {
        margin-bottom: 20px;
    }

    /* Button Styles */
    .btn {
        display: inline-block; /* Keep default behavior for Create button */
        padding: 10px 20px;
        font-size: 14px;
        font-weight: 600;
        text-decoration: none;
        border: none;
        cursor: pointer;
        border-radius: 4px;
        transition: all 0.3s ease;
        margin-right: 10px; /* Add space between buttons */
        text-align: center;
        vertical-align: middle;
    }

    /* Specific Button Classes */
    .btn-create {
        background-color: #28a745;
        color: white;
    }

        .btn-create:hover {
            background-color: #218838;
            transform: scale(1.05);
        }

    /* Action Buttons: Make them block-level and equal width */
    .btn-edit,
    .btn-details,
    .btn-delete {
        display: block; /* Make buttons block-level */
        width: 100%; /* Make buttons take full width of their container */
        margin-bottom: 10px; /* Add space between buttons */
    }

    .btn-edit {
        background-color: #ffc107;
        color: white;
    }

        .btn-edit:hover {
            background-color: #e0a800;
            transform: scale(1.05);
        }

    .btn-details {
        background-color: #17a2b8;
        color: white;
    }

        .btn-details:hover {
            background-color: #138496;
            transform: scale(1.05);
        }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background-color: #c82333;
            transform: scale(1.05);
        }

    /* Table Container */
    .table-container {
        overflow-x: auto;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Table Styles */
    .occupancy-table {
        width: 100%;
        border-collapse: collapse;
        min-width: 800px;
    }

        .occupancy-table th,
        .occupancy-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .occupancy-table th {
            background-color: #007bff;
            color: white;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .occupancy-table td {
            background-color: #fafafa;
            color: #333;
        }

        .occupancy-table tr:nth-child(even) td {
            background-color: #f9f9f9;
        }

        .occupancy-table tr:hover td {
            background-color: #f1f1f1;
            cursor: pointer;
        }

</style>



